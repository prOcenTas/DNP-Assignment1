@page "/ViewAdult"
@using Models
@using Assignment1.Data
@inject IService Service

@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Adult List</h3>
<AuthorizeView>
        Hello @context.User.Identity.Name Your role is: @context.User.FindFirst(claim => claim.Type.Equals("Role")).Value
</AuthorizeView>

<p>
    Search for Adult by ID: <input type="int" @oninput="@((arg) => Filter(arg))" style="width:50px"/>
</p>

@if (adultsToShow == null)
{
    <p>
        <em>Loading.....</em>
    </p>
}
else if (!adultsToShow.Any())
{
    <p>
        <em>No Adults items exist....</em>
    </p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Job Title</th>
                <th>Id</th>
                <th>FirstName</th>
                <th>LastName</th>
                <th>HairColor</th>
                <th>EyeColor</th>
                <th>Age</th>
                <th>Weight</th>
                <th>Height</th>
                <th>Sex</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in adultsToShow)
        {
            <tr>
                <td>@item.JobTitle</td>
                <td>@item.Id</td>
                <td>@item.FirstName</td>
                <td>@item.LastName</td>
                <td>@item.HairColor</td>
                <td>@item.EyeColor</td>
                <td>@item.Age</td>
                <td>@item.Weight</td>
                <td>@item.Height</td>
                <td>@item.Sex</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {

    private IList<Adult> allAdults;
    private IList<Adult> adultsToShow;

    protected override async Task OnInitializedAsync()
    {
        allAdults = Service.GetAdults();
        adultsToShow = allAdults;
    }

    private void Filter(ChangeEventArgs changeEventArgs)
    {
        int? filterById = null;
        try
        {
            filterById = int.Parse(changeEventArgs.Value.ToString());
        }catch(Exception e){ }
        if (filterById != null)
        {
            adultsToShow = allAdults.Where(t => t.Id == filterById).ToList();
        }
        else
        {
            adultsToShow = allAdults;
        }
        
    }

}